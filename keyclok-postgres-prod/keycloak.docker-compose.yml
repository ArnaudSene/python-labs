services:

  keycloak:
    build:
      context: ./
      dockerfile: ./keycloak.dockerfile
    ports:
      - 8443:8443
    restart: always
    labels:
      # Enable Traefik for this specific "backend" service
      - traefik.enable=true
      # Define the port inside of the Docker service to use
      - traefik.http.services.keycloak.loadbalancer.server.port=8443
      # Make Traefik use this domain in HTTP
      - traefik.http.routers.keycloak-http.entrypoints=http
      - traefik.http.routers.keycloak-http.rule=Host(`streamlit.pyapi.pyapps.site`)
      # Use the traefik-public network (declared below)
      - traefik.docker.network=traefik-public
      # Make Traefik use this domain in HTTPS
      - traefik.http.routers.keycloak-https.entrypoints=https
      - traefik.http.routers.keycloak-https.rule=Host(`streamlit.pyapi.pyapps.site`)
      - traefik.http.routers.keycloak-https.tls=true
      # Use the "le" (Let's Encrypt) resolver
      - traefik.http.routers.keycloak-https.tls.certresolver=le
      # Middleware to redirect HTTP to HTTPS
      - traefik.http.routers.keycloak-http.middlewares=https-redirect
      - traefik.http.routers.keycloak-https.middlewares=admin-auth
    networks:
      # Use the public network created to be shared between Traefik and
      # any other service that needs to be publicly available with HTTPS
      - traefik-public

networks:
  traefik-public:
    external: true

